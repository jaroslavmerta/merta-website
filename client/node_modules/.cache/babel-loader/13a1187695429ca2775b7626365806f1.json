{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\logme\\\\Dropbox\\\\Projekty_kody\\\\node.js\\\\react-apps\\\\merta-site\\\\src\\\\persons\\\\PersonForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { ApiGet, ApiPost, ApiPut } from '../common/Api';\nimport DateStringFormatter from '../common/DateStringFormatter';\nimport FlashMessage from '../common/FlashMessage';\nimport InputField from '../common/InputField';\nimport InputCheck from '../common/InputCheck';\nimport Role from './Role';\nimport { useLocation } from \"react-router\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PersonForm = props => {\n  _s();\n\n  const history = useLocation();\n  const [personIdState, setPersonId] = useState(null);\n  const [personNameState, setPersonName] = useState('');\n  const [birthDateState, setBirthDate] = useState('');\n  const [countaryState, setCountry] = useState('');\n  const [biographyState, setBiography] = useState('');\n  const [personRoleState, setPersonRole] = useState('');\n  const [sentState, setSent] = useState(false);\n  const [successState, setSuccess] = useState(false);\n  const [errorState, setError] = useState(null);\n  useEffect(() => {\n    const id = props.match.params.id || null;\n\n    if (id) {\n      setPersonId(id);\n      ApiGet(\"/api/people/\" + id).then(data => {\n        setPersonName(data.name);\n        setBirthDate(DateStringFormatter(data.birthDate));\n        setCountry(data.country);\n        setBiography(data.biography);\n        setPersonRole(data.role);\n      });\n    }\n  }, [props.match.params.id]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const body = {\n      name: personNameState,\n      birthDate: birthDateState,\n      country: countaryState,\n      biography: biographyState,\n      role: personRoleState\n    };\n    (personIdState ? ApiPut('/api/people/' + props.match.params.id, body) : ApiPost('/api/people/', body)).then(data => {\n      setSent(true);\n      setSuccess(true);\n      history.push('/people');\n    }).catch(async error => {\n      const er = await error;\n      console.log('here', er.message);\n      setError(er.message);\n      setSent(true);\n      setSuccess(false);\n    });\n  };\n\n  const sent = sentState;\n  const success = successState;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [props.match.params.id ? 'Upravit' : 'Vytvořit', \" osobnost\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }, this), errorState ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-danger\",\n      children: errorState\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 30\n    }, this) : '', sent && /*#__PURE__*/_jsxDEV(FlashMessage, {\n      theme: success ? 'success' : '',\n      text: success ? 'Uložení osobnosti proběhlo úspěšně.' : ''\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(InputField, {\n        required: true,\n        type: \"text\",\n        name: \"personName\",\n        min: \"3\",\n        label: \"Jm\\xE9no\",\n        prompt: \"Zadejte cel\\xE9 jm\\xE9no\",\n        value: personNameState,\n        handleChange: e => {\n          const {\n            value\n          } = e.target;\n          setPersonName(value);\n          console.log(personNameState);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(InputField, {\n        required: true,\n        type: \"date\",\n        name: \"birthDate\",\n        label: \"Datum narozen\\xED\",\n        prompt: \"Zadejte datum narozen\\xED\",\n        min: \"0000-01-01\",\n        value: birthDateState,\n        handleChange: e => {\n          const {\n            value\n          } = e.target;\n          setBirthDate(value);\n          console.log(birthDateState);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(InputField, {\n        required: true,\n        type: \"text\",\n        name: \"country\",\n        min: \"2\",\n        label: \"Zem\\u011B p\\u016Fvodu\",\n        prompt: \"Zadejte zemi p\\u016Fvodu\",\n        value: countaryState,\n        handleChange: e => {\n          const {\n            value\n          } = e.target;\n          setCountry(value);\n          console.log(countaryState);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(InputField, {\n        required: true,\n        type: \"textarea\",\n        name: \"biography\",\n        minLength: \"10\",\n        label: \"Biografie\",\n        prompt: \"Napi\\u0161te biografii\",\n        rows: \"5\",\n        value: biographyState,\n        handleChange: e => {\n          const {\n            value\n          } = e.target;\n          setBiography(value);\n          console.log(biographyState);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n        children: \"Role:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(InputCheck, {\n        type: \"radio\",\n        name: \"personRole\",\n        label: \"Re\\u017Eis\\xE9r\",\n        value: Role.DIRECTOR,\n        handleChange: e => {\n          const {\n            value\n          } = e.target;\n          setPersonRole(value);\n          console.log(personRoleState);\n        },\n        checked: Role.DIRECTOR === personRoleState\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(InputCheck, {\n        type: \"radio\",\n        name: \"personRole\",\n        label: \"Herec\",\n        value: Role.ACTOR,\n        handleChange: e => {\n          const {\n            value\n          } = e.target;\n          setPersonRole(value);\n          console.log(personRoleState);\n        },\n        checked: Role.ACTOR === personRoleState\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        value: \"Ulo\\u017Eit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 13\n  }, this);\n};\n\n_s(PersonForm, \"7Wj5Rh9UbeR1n++zRr3UkWrQxgk=\", false, function () {\n  return [useLocation];\n});\n\n_c = PersonForm;\nexport default PersonForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"PersonForm\");","map":{"version":3,"sources":["C:/Users/logme/Dropbox/Projekty_kody/node.js/react-apps/merta-site/src/persons/PersonForm.js"],"names":["React","useState","useEffect","ApiGet","ApiPost","ApiPut","DateStringFormatter","FlashMessage","InputField","InputCheck","Role","useLocation","PersonForm","props","history","personIdState","setPersonId","personNameState","setPersonName","birthDateState","setBirthDate","countaryState","setCountry","biographyState","setBiography","personRoleState","setPersonRole","sentState","setSent","successState","setSuccess","errorState","setError","id","match","params","then","data","name","birthDate","country","biography","role","handleSubmit","e","preventDefault","body","push","catch","error","er","console","log","message","sent","success","value","target","DIRECTOR","ACTOR"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { ApiGet, ApiPost, ApiPut } from '../common/Api';\r\nimport DateStringFormatter from '../common/DateStringFormatter';\r\nimport FlashMessage from '../common/FlashMessage';\r\nimport InputField from '../common/InputField';\r\nimport InputCheck from '../common/InputCheck';\r\nimport Role from './Role';\r\nimport { useLocation } from \"react-router\";\r\n\r\n\r\nconst PersonForm = (props) => {\r\n    const history = useLocation();\r\n    const [personIdState, setPersonId] = useState(null);\r\n    const [personNameState, setPersonName] = useState('');\r\n    const [birthDateState, setBirthDate] = useState('');\r\n    const [countaryState, setCountry] = useState('');\r\n    const [biographyState, setBiography] = useState('');\r\n    const [personRoleState, setPersonRole] = useState('');\r\n    const [sentState, setSent] = useState(false);\r\n    const [successState, setSuccess] = useState(false);\r\n    const [errorState, setError] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const id = props.match.params.id || null;\r\n      \r\n        if (id) {\r\n          setPersonId(id);\r\n      \r\n          ApiGet(\"/api/people/\" + id).then((data) => {\r\n            setPersonName(data.name);\r\n            setBirthDate(DateStringFormatter(data.birthDate));\r\n            setCountry(data.country);\r\n            setBiography(data.biography);\r\n            setPersonRole(data.role);\r\n          });\r\n        }\r\n      }, [props.match.params.id]);\r\n\r\n      const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        const body = {\r\n            name: personNameState,\r\n            birthDate: birthDateState,\r\n            country: countaryState,\r\n            biography: biographyState,\r\n            role: personRoleState,\r\n        };\r\n\r\n        (personIdState\r\n            ? ApiPut('/api/people/' + props.match.params.id, body)\r\n            : ApiPost('/api/people/', body)\r\n        )\r\n            .then((data) => {\r\n                setSent(true);\r\n                setSuccess(true);\r\n                history.push('/people');\r\n            })\r\n            .catch( async (error) => {\r\n                const er = await error\r\n                console.log('here', er.message)\r\n                setError(er.message)\r\n                setSent(true);\r\n                setSuccess(false);\r\n            });\r\n\r\n    }\r\n    \r\n    const sent = sentState;\r\n    const success = successState;\r\n    \r\n        return (\r\n            <div>\r\n                <h1>{props.match.params.id ? 'Upravit' : 'Vytvořit'} osobnost</h1>\r\n                <hr />\r\n                {errorState? <div className='alert alert-danger'>{errorState}</div> : ''}\r\n                {sent && (\r\n                    <FlashMessage\r\n                        theme={success ? 'success' : ''}\r\n                        text={\r\n                            success\r\n                                ? 'Uložení osobnosti proběhlo úspěšně.'\r\n                                : ''\r\n                        }\r\n                    />\r\n                )}\r\n    \r\n                <form onSubmit={handleSubmit}>\r\n                    <InputField\r\n                        required={true}\r\n                        type=\"text\"\r\n                        name=\"personName\"\r\n                        min=\"3\"\r\n                        label=\"Jméno\"\r\n                        prompt=\"Zadejte celé jméno\"\r\n                        value={personNameState}\r\n                        handleChange={(e) => {\r\n                        const { value } = e.target;\r\n                        setPersonName(value);\r\n                        console.log(personNameState);\r\n                        }}\r\n                    />\r\n\r\n                    <InputField\r\n                        required={true}\r\n                        type=\"date\"\r\n                        name=\"birthDate\"\r\n                        label=\"Datum narození\"\r\n                        prompt=\"Zadejte datum narození\"\r\n                        min=\"0000-01-01\"\r\n                        value={birthDateState}\r\n                        handleChange={(e) => {\r\n                        const { value } = e.target;\r\n                        setBirthDate(value);\r\n                        console.log(birthDateState);\r\n                        }}\r\n                    />\r\n\r\n                    <InputField\r\n                        required={true}\r\n                        type=\"text\"\r\n                        name=\"country\"\r\n                        min=\"2\"\r\n                        label=\"Země původu\"\r\n                        prompt=\"Zadejte zemi původu\"\r\n                        value={countaryState}\r\n                        handleChange={(e) => {\r\n                        const { value } = e.target;\r\n                        setCountry(value);\r\n                        console.log(countaryState);\r\n                        }}\r\n                    />\r\n\r\n                    <InputField\r\n                        required={true}\r\n                        type=\"textarea\"\r\n                        name=\"biography\"\r\n                        minLength=\"10\"\r\n                        label=\"Biografie\"\r\n                        prompt=\"Napište biografii\"\r\n                        rows=\"5\"\r\n                        value={biographyState}\r\n                        handleChange={(e) => {\r\n                        const { value } = e.target;\r\n                        setBiography(value);\r\n                        console.log(biographyState);\r\n                        }}\r\n                    />\r\n\r\n                    <h6>Role:</h6>\r\n\r\n                    <InputCheck\r\n                        type=\"radio\"\r\n                        name=\"personRole\"\r\n                        label=\"Režisér\"\r\n                        value={Role.DIRECTOR}\r\n                        handleChange={(e) => {\r\n                        const { value } = e.target;\r\n                        setPersonRole(value);\r\n                        console.log(personRoleState);\r\n                        }}\r\n                        checked={Role.DIRECTOR === personRoleState}\r\n                    />\r\n\r\n                    <InputCheck\r\n                        type=\"radio\"\r\n                        name=\"personRole\"\r\n                        label=\"Herec\"\r\n                        value={Role.ACTOR}\r\n                        handleChange={(e) => {\r\n                        const { value } = e.target;\r\n                        setPersonRole(value);\r\n                        console.log(personRoleState);\r\n                        }}\r\n                        checked={Role.ACTOR === personRoleState}\r\n                    />\r\n\r\n                    <input type=\"submit\" className=\"btn btn-primary\" value=\"Uložit\" />\r\n                </form>\r\n            </div>\r\n        );\r\n}\r\n\r\nexport default PersonForm;"]},"metadata":{},"sourceType":"module"}