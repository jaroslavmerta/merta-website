{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\logme\\\\Dropbox\\\\Projekty_kody\\\\node.js\\\\react-apps\\\\merta-site\\\\src\\\\common\\\\InputField.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function InputField(props) {\n  // podporované typy pro element input\n  const INPUTS = [\"text\", \"number\", \"date\"]; // validace elementu a typu\n\n  const type = props.type.toLowerCase();\n  const isTextarea = type === \"textarea\";\n  const required = props.required || false;\n\n  if (!isTextarea && !INPUTS.includes(type)) {\n    return null;\n  } // přiřazení hodnoty minima do atributu příslušného typu\n\n\n  const minProp = props.min || null;\n  const min = [\"number\", \"date\"].includes(type) ? minProp : null;\n  const minlength = [\"text\", \"textarea\"].includes(type) ? minProp : null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-group\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: [props.label, \":\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), isTextarea ? /*#__PURE__*/_jsxDEV(\"textarea\", {\n      required: required,\n      className: \"form-control\",\n      placeholder: props.prompt,\n      rows: props.rows,\n      minLength: minlength,\n      name: props.name,\n      value: props.value,\n      onChange: props.handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n      required: required,\n      type: type,\n      className: \"form-control\",\n      placeholder: props.prompt,\n      minLength: minlength,\n      min: min,\n      name: props.name,\n      value: props.value,\n      onChange: props.handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n_c = InputField;\nexport default InputField;\n\nvar _c;\n\n$RefreshReg$(_c, \"InputField\");","map":{"version":3,"sources":["C:/Users/logme/Dropbox/Projekty_kody/node.js/react-apps/merta-site/src/common/InputField.js"],"names":["React","InputField","props","INPUTS","type","toLowerCase","isTextarea","required","includes","minProp","min","minlength","label","prompt","rows","name","value","handleChange"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,OAAO,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AAChC;AACA,QAAMC,MAAM,GAAG,CAAC,MAAD,EAAS,QAAT,EAAmB,MAAnB,CAAf,CAFgC,CAIhC;;AACA,QAAMC,IAAI,GAAGF,KAAK,CAACE,IAAN,CAAWC,WAAX,EAAb;AACA,QAAMC,UAAU,GAAGF,IAAI,KAAK,UAA5B;AACA,QAAMG,QAAQ,GAAGL,KAAK,CAACK,QAAN,IAAkB,KAAnC;;AAEA,MAAI,CAACD,UAAD,IAAe,CAACH,MAAM,CAACK,QAAP,CAAgBJ,IAAhB,CAApB,EAA2C;AACzC,WAAO,IAAP;AACD,GAX+B,CAahC;;;AACA,QAAMK,OAAO,GAAGP,KAAK,CAACQ,GAAN,IAAa,IAA7B;AACA,QAAMA,GAAG,GAAG,CAAC,QAAD,EAAW,MAAX,EAAmBF,QAAnB,CAA4BJ,IAA5B,IAAoCK,OAApC,GAA8C,IAA1D;AACA,QAAME,SAAS,GAAG,CAAC,MAAD,EAAS,UAAT,EAAqBH,QAArB,CAA8BJ,IAA9B,IAAsCK,OAAtC,GAAgD,IAAlE;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA,4BACE;AAAA,iBAAQP,KAAK,CAACU,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAIGN,UAAU,gBACT;AACE,MAAA,QAAQ,EAAEC,QADZ;AAEE,MAAA,SAAS,EAAC,cAFZ;AAGE,MAAA,WAAW,EAAEL,KAAK,CAACW,MAHrB;AAIE,MAAA,IAAI,EAAEX,KAAK,CAACY,IAJd;AAKE,MAAA,SAAS,EAAEH,SALb;AAME,MAAA,IAAI,EAAET,KAAK,CAACa,IANd;AAOE,MAAA,KAAK,EAAEb,KAAK,CAACc,KAPf;AAQE,MAAA,QAAQ,EAAEd,KAAK,CAACe;AARlB;AAAA;AAAA;AAAA;AAAA,YADS,gBAYT;AACE,MAAA,QAAQ,EAAEV,QADZ;AAEE,MAAA,IAAI,EAAEH,IAFR;AAGE,MAAA,SAAS,EAAC,cAHZ;AAIE,MAAA,WAAW,EAAEF,KAAK,CAACW,MAJrB;AAKE,MAAA,SAAS,EAAEF,SALb;AAME,MAAA,GAAG,EAAED,GANP;AAOE,MAAA,IAAI,EAAER,KAAK,CAACa,IAPd;AAQE,MAAA,KAAK,EAAEb,KAAK,CAACc,KARf;AASE,MAAA,QAAQ,EAAEd,KAAK,CAACe;AATlB;AAAA;AAAA;AAAA;AAAA,YAhBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA+BD;KAjDehB,U;AAmDhB,eAAeA,UAAf","sourcesContent":["import React from \"react\";\r\n\r\nexport function InputField(props) {\r\n  // podporované typy pro element input\r\n  const INPUTS = [\"text\", \"number\", \"date\"];\r\n\r\n  // validace elementu a typu\r\n  const type = props.type.toLowerCase();\r\n  const isTextarea = type === \"textarea\";\r\n  const required = props.required || false;\r\n\r\n  if (!isTextarea && !INPUTS.includes(type)) {\r\n    return null;\r\n  }\r\n\r\n  // přiřazení hodnoty minima do atributu příslušného typu\r\n  const minProp = props.min || null;\r\n  const min = [\"number\", \"date\"].includes(type) ? minProp : null;\r\n  const minlength = [\"text\", \"textarea\"].includes(type) ? minProp : null;\r\n\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label>{props.label}:</label>\r\n\r\n      {/* vykreslení aktuálního elementu */}\r\n      {isTextarea ? (\r\n        <textarea\r\n          required={required}\r\n          className=\"form-control\"\r\n          placeholder={props.prompt}\r\n          rows={props.rows}\r\n          minLength={minlength}\r\n          name={props.name}\r\n          value={props.value}\r\n          onChange={props.handleChange}\r\n        />\r\n      ) : (\r\n        <input\r\n          required={required}\r\n          type={type}\r\n          className=\"form-control\"\r\n          placeholder={props.prompt}\r\n          minLength={minlength}\r\n          min={min}\r\n          name={props.name}\r\n          value={props.value}\r\n          onChange={props.handleChange}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default InputField;"]},"metadata":{},"sourceType":"module"}