{"ast":null,"code":"import axios from \"axios\";\nconst API_URL = \"http://localhost:5000\";\nexport const ApiGet = (url, par) => {\n  return axios({\n    method: \"get\",\n    url: API_URL + url,\n    params: par\n  }).then(response => {\n    return response.data;\n  }).catch(error => {\n    console.log(object);\n    throw error;\n  });\n};\n_c = ApiGet;\nexport const ApiPost = (url, body) => {\n  return axios({\n    method: \"post\",\n    url: API_URL + url,\n    data: body\n  }).then(response => {\n    return response.data;\n  }).catch(error => {\n    throw error;\n  });\n};\n_c2 = ApiPost;\nexport const ApiPut = function (url) {\n  let body = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return axios({\n    method: \"put\",\n    url: API_URL + url,\n    data: body\n  }).then(response => {\n    return response.data;\n  }).catch(error => {\n    throw error;\n  });\n};\n_c3 = ApiPut;\nexport const ApiDelete = url => {\n  return axios({\n    method: \"delete\",\n    url: API_URL + url\n  }).then(response => {\n    return response.data;\n  }).catch(error => {\n    throw error;\n  });\n};\n_c4 = ApiDelete;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"ApiGet\");\n$RefreshReg$(_c2, \"ApiPost\");\n$RefreshReg$(_c3, \"ApiPut\");\n$RefreshReg$(_c4, \"ApiDelete\");","map":{"version":3,"sources":["C:/Users/logme/Dropbox/Projekty_kody/node.js/react-apps/merta-site/src/common/Api.js"],"names":["axios","API_URL","ApiGet","url","par","method","params","then","response","data","catch","error","console","log","object","ApiPost","body","ApiPut","ApiDelete"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,OAAO,GAAG,uBAAhB;AAEA,OAAO,MAAMC,MAAM,GAAG,CAACC,GAAD,EAAMC,GAAN,KAAc;AAChC,SAAOJ,KAAK,CAAC;AAAEK,IAAAA,MAAM,EAAE,KAAV;AAAiBF,IAAAA,GAAG,EAAEF,OAAO,GAAGE,GAAhC;AAAqCG,IAAAA,MAAM,EAAEF;AAA7C,GAAD,CAAL,CACFG,IADE,CACIC,QAAD,IAAc;AAChB,WAAOA,QAAQ,CAACC,IAAhB;AACH,GAHE,EAIFC,KAJE,CAIKC,KAAD,IAAW;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYC,MAAZ;AACA,UAAMH,KAAN;AACH,GAPE,CAAP;AAQH,CATM;KAAMT,M;AAWb,OAAO,MAAMa,OAAO,GAAG,CAACZ,GAAD,EAAMa,IAAN,KAAe;AAClC,SAAOhB,KAAK,CAAC;AAAEK,IAAAA,MAAM,EAAE,MAAV;AAAkBF,IAAAA,GAAG,EAAEF,OAAO,GAAGE,GAAjC;AAAsCM,IAAAA,IAAI,EAAEO;AAA5C,GAAD,CAAL,CACFT,IADE,CACIC,QAAD,IAAc;AAChB,WAAOA,QAAQ,CAACC,IAAhB;AACH,GAHE,EAIFC,KAJE,CAIKC,KAAD,IAAW;AACd,UAAMA,KAAN;AACH,GANE,CAAP;AAOH,CARM;MAAMI,O;AAUb,OAAO,MAAME,MAAM,GAAG,UAACd,GAAD,EAAoB;AAAA,MAAda,IAAc,uEAAP,EAAO;AACtC,SAAOhB,KAAK,CAAC;AAAEK,IAAAA,MAAM,EAAE,KAAV;AAAiBF,IAAAA,GAAG,EAAEF,OAAO,GAAGE,GAAhC;AAAqCM,IAAAA,IAAI,EAAEO;AAA3C,GAAD,CAAL,CACFT,IADE,CACIC,QAAD,IAAc;AAChB,WAAOA,QAAQ,CAACC,IAAhB;AACH,GAHE,EAIFC,KAJE,CAIKC,KAAD,IAAW;AACd,UAAMA,KAAN;AACH,GANE,CAAP;AAOH,CARM;MAAMM,M;AAUb,OAAO,MAAMC,SAAS,GAAIf,GAAD,IAAS;AAC9B,SAAOH,KAAK,CAAC;AAAEK,IAAAA,MAAM,EAAE,QAAV;AAAoBF,IAAAA,GAAG,EAAEF,OAAO,GAAGE;AAAnC,GAAD,CAAL,CACFI,IADE,CACIC,QAAD,IAAc;AAChB,WAAOA,QAAQ,CAACC,IAAhB;AACH,GAHE,EAIFC,KAJE,CAIKC,KAAD,IAAW;AACd,UAAMA,KAAN;AACH,GANE,CAAP;AAOH,CARM;MAAMO,S","sourcesContent":["import axios from \"axios\";\r\n\r\nconst API_URL = \"http://localhost:5000\";\r\n\r\nexport const ApiGet = (url, par) => {\r\n    return axios({ method: \"get\", url: API_URL + url, params: par })\r\n        .then((response) => {\r\n            return response.data;\r\n        })\r\n        .catch((error) => {\r\n            console.log(object)\r\n            throw error;\r\n        });\r\n};\r\n\r\nexport const ApiPost = (url, body) => {\r\n    return axios({ method: \"post\", url: API_URL + url, data: body })\r\n        .then((response) => {\r\n            return response.data;\r\n        })\r\n        .catch((error) => {\r\n            throw error;\r\n        });\r\n};\r\n\r\nexport const ApiPut = (url, body = {}) => {\r\n    return axios({ method: \"put\", url: API_URL + url, data: body })\r\n        .then((response) => {\r\n            return response.data;\r\n        })\r\n        .catch((error) => {\r\n            throw error;\r\n        });\r\n};\r\n\r\nexport const ApiDelete = (url) => {\r\n    return axios({ method: \"delete\", url: API_URL + url })\r\n        .then((response) => {\r\n            return response.data;\r\n        })\r\n        .catch((error) => {\r\n            throw error;\r\n        });\r\n};"]},"metadata":{},"sourceType":"module"}