{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\logme\\\\Dropbox\\\\Projekty_kody\\\\node.js\\\\react-apps\\\\merta-site\\\\src\\\\movies\\\\MovieIndex.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { ApiGet } from '../common/Api';\nimport MovieTable from './MovieTable';\nimport MovieFilter from './MovieFilter';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MovieIndex = props => {\n  _s();\n\n  const [directorListState, setDirectorList] = useState([]);\n  const [actorListState, setActorList] = useState([]);\n  const [genreListState, setGenreList] = useState([]);\n  const [moviesState, setMovies] = useState([]);\n  const [filterState, setFilter] = useState({\n    directorID: undefined,\n    actorID: undefined,\n    genre: undefined,\n    fromYear: undefined,\n    toYear: undefined,\n    limit: undefined\n  });\n\n  const deletee = () => {\n    ApiGet('/api/movies').then(data => setMovies(data));\n  };\n\n  useEffect(() => {\n    ApiGet('/api/directors').then(data => setDirectorList(data));\n    ApiGet('/api/actors').then(data => setActorList(data));\n    ApiGet('/api/genres').then(data => setGenreList(data));\n    ApiGet('/api/movies').then(data => setMovies(data));\n  }, []);\n\n  const handleChange = e => {\n    // pokud vybereme prázdnou hodnotu (máme definováno jako true/false/'' v komponentách), nastavíme na undefined\n    if (e.target.value === \"false\" || e.target.value === \"true\" || e.target.value === '') {\n      setFilter(prevState => {\n        return { ...prevState,\n          [e.target.name]: undefined\n        };\n      });\n    } else {\n      setFilter(prevState => {\n        return { ...prevState,\n          [e.target.name]: e.target.value\n        };\n      });\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const params = filterState;\n    ApiGet('/api/movies', params).then(data => setMovies(data));\n    console.log(moviesState);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Seznam film\\u016F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MovieFilter, {\n      handleChange: handleChange,\n      handleSubmit: handleSubmit,\n      directorList: directorListState,\n      actorList: actorListState,\n      genreList: genreListState,\n      filter: filterState,\n      confirm: \"Filtrovat filmy\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MovieTable, {\n      delete: deletee,\n      items: moviesState,\n      label: \"Po\\u010Det film\\u016F:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n};\n\n_s(MovieIndex, \"AELzCHBveR6NvhQN7x145KtjgWE=\");\n\n_c = MovieIndex;\nexport default MovieIndex;\n\nvar _c;\n\n$RefreshReg$(_c, \"MovieIndex\");","map":{"version":3,"sources":["C:/Users/logme/Dropbox/Projekty_kody/node.js/react-apps/merta-site/src/movies/MovieIndex.js"],"names":["React","useState","useEffect","ApiGet","MovieTable","MovieFilter","MovieIndex","props","directorListState","setDirectorList","actorListState","setActorList","genreListState","setGenreList","moviesState","setMovies","filterState","setFilter","directorID","undefined","actorID","genre","fromYear","toYear","limit","deletee","then","data","handleChange","e","target","value","prevState","name","handleSubmit","preventDefault","params","console","log"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { ApiGet } from '../common/Api';\r\nimport MovieTable from './MovieTable';\r\nimport MovieFilter from './MovieFilter';\r\n\r\nconst MovieIndex = (props) => {\r\n    const [directorListState, setDirectorList] = useState([]);\r\n    const [actorListState, setActorList] = useState([]);\r\n    const [genreListState, setGenreList] = useState([]);\r\n    const [moviesState, setMovies] = useState([]);\r\n    const [filterState, setFilter] = useState({\r\n    directorID: undefined,\r\n    actorID: undefined,\r\n    genre: undefined,\r\n    fromYear: undefined,\r\n    toYear: undefined,\r\n    limit: undefined,\r\n    });\r\n\r\n\r\n    const deletee = () => {\r\n        ApiGet('/api/movies').then((data) => setMovies(data));\r\n    };\r\n\r\n    useEffect(() => {\r\n        ApiGet('/api/directors').then((data) => setDirectorList(data));\r\n        ApiGet('/api/actors').then((data) => setActorList(data));\r\n        ApiGet('/api/genres').then((data) => setGenreList(data));\r\n\r\n        ApiGet('/api/movies').then((data) => setMovies(data));\r\n    }, []);\r\n\r\n    const handleChange = (e) => {\r\n        // pokud vybereme prázdnou hodnotu (máme definováno jako true/false/'' v komponentách), nastavíme na undefined\r\n        if (e.target.value === \"false\" || e.target.value === \"true\" || e.target.value === '') {\r\n            setFilter(prevState => { \r\n                return {...prevState, [e.target.name]: undefined}\r\n            });\r\n        } else {\r\n            setFilter(prevState => {\r\n                return { ...prevState, [e.target.name]: e.target.value}\r\n            });\r\n        }\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const params = filterState;\r\n\r\n        ApiGet('/api/movies', params).then((data) => setMovies(data)); console.log(moviesState);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h3>Seznam filmů</h3>\r\n            <hr />\r\n            <MovieFilter\r\n                handleChange={handleChange}\r\n                handleSubmit={handleSubmit}\r\n                directorList={directorListState}\r\n                actorList={actorListState}\r\n                genreList={genreListState}\r\n                filter={filterState}\r\n                confirm=\"Filtrovat filmy\"\r\n            />\r\n            <hr />\r\n            <MovieTable delete={deletee} items={moviesState} label=\"Počet filmů:\" />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MovieIndex;"]},"metadata":{},"sourceType":"module"}